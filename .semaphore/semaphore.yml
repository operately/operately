version: v1.0
name: Operately â€” Build & Test
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2004

auto_cancel:
  running:
    when: "branch != 'main'"

blocks:
  - name: License Check
    dependencies: []
    task:
      secrets:
        - name: ci-cache-credentials
      prologue:
        commands:
          - checkout
          - cache restore app-deps
          - cache restore app-build
          - cache restore app-node-modules
          - cache restore turboui-node-modules
          - cache restore turboui-dist
          - ./scripts/cache-fix-for-erlang
          - make test.up
      jobs:
        - name: Licence Check
          commands:
            - make test.license.check

  - name: App Tests
    run:
      when: "change_in('/app', {default_branch: 'main'}) or change_in('/turboui', {default_branch: 'main'})"
    dependencies: []
    task:
      secrets:
        - name: ci-cache-credentials
      prologue:
        commands:
          - checkout
          - cache restore app-deps
          - cache restore app-build
          - cache restore app-node-modules
          - cache restore turboui-node-modules
          - cache restore turboui-dist
          - ./scripts/cache-fix-for-erlang
          - make test.build

      jobs:
        - name: Lint
          commands:
            - make test.js.dead.code
            - make test.tsc.lint
            - make test.elixir.warnings
            - make test.pr.name

        - name: Unit Tests
          commands:
            - make test.mix.unit
            - make test.ee
            - make test.npm

        - name: Features
          parallelism: 8
          commands:
            - make test.mix.features INDEX=$SEMAPHORE_JOB_INDEX TOTAL=$SEMAPHORE_JOB_COUNT

      epilogue:
        always:
          commands:
            - "[ -f app/testreports/junit.xml ] && test-results publish app/testreports/junit.xml"
            - artifact push workflow screenshots

  - name: Docker Build
    dependencies: []
    task:
      secrets:
        - name: docker-push
      prologue:
        commands:
          - checkout
          - cache restore
      jobs:
        - name: "Docker Release"
          commands:
            - docker pull operately/operately:latest
            - make docker.build
            - 'if [[ "$SEMAPHORE_GIT_BRANCH" = "main" && "$SEMAPHORE_GIT_REF_TYPE" = "branch" ]]; then make docker.push; else echo "Skipping Docker push"; fi'

after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report

promotions:
  - name: Production Deployment
    pipeline_file: deploy.yml
    auto_promote:
      when: "result = 'passed' and branch = 'main'"

  - name: Populate CI Cache
    pipeline_file: cache.yml
    auto_promote:
      when: "result = 'passed' and branch = 'main'"
