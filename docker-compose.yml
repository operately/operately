services:
  app:
    image: operately/operately-dev:latest
    user: ${USER_ID}:${GROUP_ID}
    shm_size: 1g
    working_dir: /home/dev/app
    volumes:
      - ./:/home/dev/app
      - ./media:/media
      - ./screenshots:/tmp/screenshots
      - ./tmp/certs:/home/dev/certs
    ports:
      - "127.0.0.1:${PORT_DEV_SERVER}:4000"                           # development server
      - "127.0.0.1:${PORT_TEST_SERVER}:4002"                          # test server
      - "127.0.0.1:${PORT_VITE_SERVER}:4005"                          # vite server for serving JS files in development
      - "127.0.0.1:${PORT_STORYBOOK_SERVER}:${PORT_STORYBOOK_SERVER}" # storybook server
    depends_on:
      - db
      - s3mock
      - mailhog
    environment:
      - DB_HOST=db
      - DB_USERNAME=postgres
      - DB_PASSWORD=keyboard-cat
      - NOTIFICATION_EMAIL=notifications@locahost.dev
      - OPERATELY_JS_SENTRY_ENABLED=false
      - OPERATELY_JS_SENTRY_DSN=not-set
      - OPERATELY_DEMO_BUILDER_ALLOWED=true
      - CERT_DOMAIN=localhost
      - CERT_DB_DIR=/home/dev/certs
      - PORT_STORYBOOK_SERVER=${PORT_STORYBOOK_SERVER}
    env_file:
      - .env
    profiles:
      - dev
      - ci

  db:
    image: postgres:14.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: keyboard-cat
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles:
      - dev
      - ci

  screenshots-server:
    image: python:3
    working_dir: "/screenshots"
    command: >
      sh -c "python -m http.server 8000"
    ports:
      - "127.0.0.1:${PORT_SCREENSHOTS}:8000"
    volumes:
      - ./screenshots:/screenshots
    profiles:
      - dev

  pgweb:
    restart: always
    image: sosedoff/pgweb:0.15.0
    command: [ "pgweb", "--bind=0.0.0.0" ]
    ports:
      - "127.0.0.1:${PORT_PGWEB}:8081"
    links:
      - db:db
    environment:
      - PGWEB_DATABASE_URL=postgres://postgres:keyboard-cat@db:5432/postgres?sslmode=disable
    depends_on:
      - db
    profiles:
      - dev

  s3mock:
    image: adobe/s3mock:3.9.1
    environment:
      - debug=true
      - retainFilesOnExit=true
      - root=containers3root
      - initialBuckets=operately
    ports:
      - "127.0.0.1:${PORT_S3MOCK}:9090"
    volumes:
      - ./locals3root:/containers3root

  mailhog:
    image: mailhog/mailhog:v1.0.1
    profiles:
      - dev
      - ci

volumes:
  postgres-data:
    driver: local
