version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - USER_ID
        - GROUP_ID
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ./:/home/dev/app
      - ./media:/media
      - ./screenshots:/tmp/screenshots
      - ./tmp/certs:/home/dev/certs
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - s3mock
    environment:
      - DB_HOST=db
      - DB_USERNAME=postgres
      - DB_PASSWORD=keyboard-cat
      - NOTIFICATION_EMAIL=notifications@locahost.dev
      - OPERATELY_JS_SENTRY_ENABLED=false
      - OPERATELY_JS_SENTRY_DSN=not-set
      - CERT_DOMAIN=localhost
      - CERT_DB_DIR=/home/dev/certs
    env_file:
      - .env
    profiles:
      - dev
      - ci

  db:
    image: postgres:14.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: keyboard-cat
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles:
      - dev
      - ci

  screenshots-server:
    image: python:3
    working_dir: "/screenshots"
    command: >
      sh -c "python -m http.server 8000"
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./screenshots:/screenshots
    profiles:
      - dev

  pgweb:
    container_name: pgweb
    restart: always
    image: sosedoff/pgweb
    command: [ "pgweb", "--bind=0.0.0.0" ]
    ports:
      - "127.0.0.1:8081:8081"
    links:
      - db:db
    environment:
      - PGWEB_DATABASE_URL=postgres://postgres:keyboard-cat@db:5432/postgres?sslmode=disable
    depends_on:
      - db
    profiles:
      - dev

  s3mock:
    image: adobe/s3mock:latest
    environment:
      - debug=true
      - retainFilesOnExit=true
      - root=containers3root
      - S3MOCK_CORS_ALLOWED_ORIGINS=*
      - S3MOCK_CORS_ALLOWED_METHODS=GET,PUT,POST,DELETE
      - S3MOCK_CORS_ALLOWED_HEADERS=Authorization,Content-Type
      - initialBuckets=operately
    ports:
      - "9090:9090"
    volumes:
      - ./locals3root:/containers3root

volumes:
  postgres-data:
    driver: local
