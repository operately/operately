//
// Automatically generated with mix operate.gen.feed.items.index
// Do not edit this file manually
//

import * as React from "react";

import GoalArchived from "./GoalArchived"
import GoalCreated from "./GoalCreated"
import ProjectArchived from "./ProjectArchived"
import ProjectClosed from "./ProjectClosed"
import ProjectCreated from "./ProjectCreated"
import ProjectDiscussionCommentSubmitted from "./ProjectDiscussionCommentSubmitted"
import ProjectDiscussionSubmitted from "./ProjectDiscussionSubmitted"
import ProjectMilestoneCommented from "./ProjectMilestoneCommented"
import ProjectMoved from "./ProjectMoved"
import ProjectRenamed from "./ProjectRenamed"
import ProjectReviewAcknowledged from "./ProjectReviewAcknowledged"
import ProjectReviewCommented from "./ProjectReviewCommented"
import ProjectReviewRequestSubmitted from "./ProjectReviewRequestSubmitted"
import ProjectReviewSubmitted from "./ProjectReviewSubmitted"
import ProjectStatusUpdateAcknowledged from "./ProjectStatusUpdateAcknowledged"
import ProjectStatusUpdateCommented from "./ProjectStatusUpdateCommented"
import ProjectStatusUpdateSubmitted from "./ProjectStatusUpdateSubmitted"
import ProjectTimelineEdited from "./ProjectTimelineEdited"

export default function FeedItem({activity}) {
  const activityType = activity.content.__typename;

  switch (activityType) {
    case "ActivityContentGoalArchived":
      return <GoalArchived activity={activity} />;
    
    case "ActivityContentGoalCreated":
      return <GoalCreated activity={activity} />;
    
    case "ActivityContentProjectArchived":
      return <ProjectArchived activity={activity} />;
    
    case "ActivityContentProjectClosed":
      return <ProjectClosed activity={activity} />;
    
    case "ActivityContentProjectCreated":
      return <ProjectCreated activity={activity} />;
    
    case "ActivityContentProjectDiscussionCommentSubmitted":
      return <ProjectDiscussionCommentSubmitted activity={activity} />;
    
    case "ActivityContentProjectDiscussionSubmitted":
      return <ProjectDiscussionSubmitted activity={activity} />;
    
    case "ActivityContentProjectMilestoneCommented":
      return <ProjectMilestoneCommented activity={activity} />;
    
    case "ActivityContentProjectMoved":
      return <ProjectMoved activity={activity} />;
    
    case "ActivityContentProjectRenamed":
      return <ProjectRenamed activity={activity} />;
    
    case "ActivityContentProjectReviewAcknowledged":
      return <ProjectReviewAcknowledged activity={activity} />;
    
    case "ActivityContentProjectReviewCommented":
      return <ProjectReviewCommented activity={activity} />;
    
    case "ActivityContentProjectReviewRequestSubmitted":
      return <ProjectReviewRequestSubmitted activity={activity} />;
    
    case "ActivityContentProjectReviewSubmitted":
      return <ProjectReviewSubmitted activity={activity} />;
    
    case "ActivityContentProjectStatusUpdateAcknowledged":
      return <ProjectStatusUpdateAcknowledged activity={activity} />;
    
    case "ActivityContentProjectStatusUpdateCommented":
      return <ProjectStatusUpdateCommented activity={activity} />;
    
    case "ActivityContentProjectStatusUpdateSubmitted":
      return <ProjectStatusUpdateSubmitted activity={activity} />;
    
    case "ActivityContentProjectTimelineEdited":
      return <ProjectTimelineEdited activity={activity} />;
    
    default:
      throw "unhandled activity type " + activityType + " in assets/js/components/Feed/FeedItem/index.tsx";
  }
}
